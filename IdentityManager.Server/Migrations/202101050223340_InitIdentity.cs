// <auto-generated />
// ReSharper disable all

using System;
using System.Data.Entity.Migrations;
using System.CodeDom.Compiler;
using System.Data.Entity.Migrations.Infrastructure;

namespace Coronaverse.IdentityManager.Server.Migrations
{
    [GeneratedCode("NFive.Migration", "0.3 Alpha Build 215")]
    public class InitIdentity : DbMigration, IMigrationMetadata
    {
        string IMigrationMetadata.Id => "202101050223340_InitIdentity";
        
        string IMigrationMetadata.Source => null;
        
        string IMigrationMetadata.Target => "H4sIAAAAAAAEAO1dW2/cOJZ+X2D/Q6EeBz0uX7uTwJ6B4ySdbMdxELuvL4Fcom0hKqlWUiUxFvvL5mF+0v6FJSXeSUmkeGRVp41BT1yk+PHwnI8Ubzrn//717+N/fl2ls8+oKJM8O5nv7ezOZyhb5nGS3Z7MN9XN35/M//mP//yP45fx6uvsF/bcAXkOl8zKk/ldVa2fLRbl8g6tonJnlSyLvMxvqp1lvlpEcb7Y3919utjbWyAMMcdYs9nxh01WJStU/8A/z/JsidbVJkrP8xilJU3HOZc16uxdtELlOlqik/lZXuRZRCRGO29ihHGq+/Moi25RsXOJis/knyov8O/57DRNIizhJUpv5rMoy/IqqrD8z34u0WWFYW4v1zghSq/u1wg/dxOlJaLteiYed23i7j5p4kIUZFDLTVnlK0/AvQOqs4VefJDm51yntb5X6xR9Jc2uVXsyf5+XSYOt1/bsLC3Igyfzd6+Sz2jn8sVPO9gGaKcx1Q4r+d1My89Q9R1nzO4OptbO97vfzc42abUp0EmGNlURpd/N3m+u02T5E7q/yj+h7CTbpKksLBb3fZGvUVHdU1l/m88agS4xSVNssHe4SHSdIm7BRWf53wPL/+FV/nghabvbCK9QRFTTZYNO9t9FBYqZXU7XaxQVEe5YOxQX676/tGI1YjP8PwijEfG53nB/ZELVXc/bBG+yGH1lcG+y6mDfG+ICDye4+YFcOMvTvGhrG8/0b2Bd9E0c1sRLtMyzeACUB2dJlWCExT/THYK4XVQl+U3iw9P0Cn1txoRRrEdS8gxrF9aEHHa77MjF+haM+bJWpWxLrM1oWaFisC2b2RO1JYfrsWFTCMyGOE9JkJT4Ad0wU8SGphd6QcN8fAT8cZPE3qbDU8YiEOJVUpQV+ZOTsirwW2c+O4++vkXZbXWHJ+C7eGL9KvmKYpZCoX/OEjwrx4WqYuPP3fMkjlM0Td1vo6la/SKq0MXN86So7ljlJOkqWflj/Yhw9y+knrv3vTcGXo585mp4nucpijJvkNcoSkV7ho1Dp8UqLwLnFpfvwgDEikN+0/JET7Rfo/QTZtVldZ92EW3fkWg9vYmMkAC1+KqcNC5wDBKrgtDBDC/G8ft7HYrzGhVJhd8kgTBkkHmfRvcoNnt6z0y7wJN1WzHfwQalyIqjFXsXfU5u67dyq2nmsw8orR8p75I1m7yw9/FH+cFXRb76kKfy61/K/3iZbwry2FXe8dBVVNyiyl1QbvoeOaXnbGLy7A4pxTO+QjJe9cgoHrOJyHI7JOSP+ApIh6pO6egzNtHqrA65mnxfocgsp0em5hGbSCSnQ6I62ybQ8ULMZTtnuDLxIaa4Au9xjkuKv7xHIPsOr6OkAAN6ndzepfi/qkYMnPfc1q9qc6fGG+k5Jk4Mg5RuyjsgJLRKyjuy2wSAdoaBKhikZgGrz/WGwmGWXhf5F5hWvk3WZZUsP4GAnUef0GYNA4UHz/I0i18VaPkpBTLp5SZ7Ea3qtx2EWR9y4uT8jpAmHRCvCA73+IYgxd/lJfo1icX6c+C2OcF5j6JPrxEZ2YHAmsUWANjzPEOwkuVfUCG/esJku/qSlKGi4VH0OR5FQZpJsUD0j1876BOYATgaBGlrMAggrK+LNcpw4TIQCb++ru7w6ytDZSjUf0VfoBRFoYD4kGQ1GEwX4nCQssGQK8leJGSiFDpI4AkDFCe28xUv1uwQb3iG9viCr3dlowI3fC9wa7cG2Q8D+YBKtLpOm9V+EIsvPyXZFe6m32RnoFtEED2hhnrsBmwVYT86HnJeE0NBRUkBBHWVF2UOibUPBPYW3ZZg6spiKKzLuxyBYa3RMonSPVg4KANQuAMocjRXHuBsqu5JNdePfM9y06gsNZEGAb2MivcJ0oaKQUg/Z5+y/Et2AIZ0CIZ0FI70a1Qt7wBgCrzuvca9GqxtT8CQnoYjbecEoznv8b4VTM5iix1SeMSLwds6fXibLFFWimHBvCJwONINARStlEOX7w9714vdV3PIzB1e0K05dL/Ei2Ry0mk99GwONPkT4sxTyTCOPNXcoBNPijK4/9Hyf8Eu+GZ9GseFvAVi6YQ/bDO3z/IsQ0sXduudIimX4WU/oKiUTuzGuks15F6l//UFx57M+qq9J7N+Pqgn83sQDl16wCVd3tEfV+9/8h7ITRqoBMqIQJTgF6x0K73rWhGV9qP0uOWKkfFU+3Uj81HvC1qso7rIzR/ukJr/2ycz+9dv6rBZycfgytdVb8pXaXQrvnAc5/uyurKxv/jAb5cYFek9fhvJu8uqTc/R6hoV6lWdX6J0g3/tGQRQHhaXS+jz+93Pn5JjCProQfej7HYIfdqcmKtSN9eC6MNH3Q/LN2xoie+7S0hXQWiBH7oLiIsy9PknPa01LrDQck97mtJcO2LW2u3TEr/yxErsmf2l6Rn9vUX+Xu9huoyocfv6zTl+iXG19tiB3gAoXbuZZuUeI5MO7Aytdpye7muwen8Ae8h7g/wcjTT8s0hSdvuI8jqqSlei8K1Xx+GYbrA6j8diH9VtUBa7pW7DstgTdRuZ651PSfyeYZnvcJau47LYyHQbl8V2pX08dmK89iHlmLRXqto+7jcHhW7cb04C3YjfHPW5cZ6e5bkRvjlfcyP7a4WIPUynJ2SO0w9+BObGcnHG5cZycYjlNusQp1SOEw925uk16zgtyxyLRbqEvjqSP+pRq32ZxTOXL3yk0zWxhjrHrE/WmOe4m5zM/2a0qQec74cIcPkbDBV9TxUco19kzfJxdrps3J6cReUyis3VI9ZWrKZ8QDeIXCLBRsSr8BJ32SSrzM2GJFsm6yh1aINW1nGrgsjGa9FzXqA1+Sg0qxzs41K9+m2eKQivT1Nen66OFxLxXPko7lH3M8byJRcYG80vwOSr6+Ky9/Zy0WjBg1LRsI1L7crHnRMTkd/26+eK+bkeGA2Nz/wkaHEfcXtJqMv/oBzU7eJSufxd8MQMbK7Y9XNE+yQTjHvqp5wSLr37t72sUyR/UMoptnCpmX9cPwnZ1POpNkq0HDsLQjTnXyPyoU0WGznZjngf5QdxzKqKB2CYtdku9bJzzonHspoh/UOO+ik32EimfAL+kLwNHMdkuR90GJPt8OdhmXmY10uNjpM9C/ucxxanmiyEbOX5FrGytSEPydBWu7kIoRx1bwdlGbOcaWQc6o5EV/1MuP9Nu4VU1RoxBVE1ezlNDcVNigcgaXO8j8tUuITY0GxcGpNk9NXmrRGP/HSXvaQXr3RqEdhLVOnML+czcaPAHP4MhqowYs/KhiNvFvYA8S0HG460z9MDw5aNNhSxTu8BqdcCNgS64OopTl7CttLNLKevbn5Jzayd9fMeCJ3znRZuA5XYaUFWfFBJj3b5qtK7juPGNm+dylmjJzpuZUtwCnf1EVBtv5duJLZ2qaZlh9V5jzVEMeauqoQmd0VAtYju16UV+3af64ZfiE6MLT4JTBpWADVCh5MudVj2npx2n0IUoe43SUhsXAxWgXYd11RAx36Iw46IJDIdizvabd/IkFvN5QQ0ffMu6LK8uVJ3WauH2F1ZnffpMKT1lsueHZroWU36ridtGmozse8K0kn7EJrjb20HvVmXNH6LGjid6cuYsH7GLsPy2TLPO140kUNoAvGibQ0xcnwerdfEEYsoSVNmlzTeyN8v/QNurBqMxVIZvPS5Pa+pmdxrueS2TIxqp9Evoiq6jsjVmrN4ZTymrQ1aJoesMmP6b1qPzRVZEfI3u/jjGnxlp7W7ChW/wg+uyFqNlEE2kpllZyQmTJRGheWTgbM83ayy9nVje2m2byYjtO2ltaNIDr5lICnZHUv22C2DyenuaMIHt4wlUt2RFJ/aMpiS4Y7H/GrLUCzNHYV61pZBaJI7BnOsLYOwNA9JGtfaiiRNkjtG7VtbRqgTrOXpzW/dAYviW9u76/LilhrbZP5NlZhBfPzNLngbzO8tML/7wfzRAvNHixoXmh6dTaX6HZfrVHM8On7jXFzp802SB4HYYaZCorYTznYc9UaSwunOu0rtiMrNEmWQ7Lpy0o4nXxNQO2779YF2NNmLuD5QsnR3NP4ZmgzFEz2GXPYNljLcskQT53ihvV+NTUvjFW9s/6qTBqcphbydMtKcon03yWFS0VV4nFmF7E9ZRpHTPague1VWuC5n+OHpzpV1WD3f4x0k+Vr2tjNzSesx4jc30ZUhigjwsUn3eXfQOD8mFM3wweJBxkw0nuWDJ4UbMxGlTG9MY3wXiG2san35qFHHTFTtgcEvZDvvJM/c0/CuFgCGdw0UFO8aNEjeNYiQvJMQAXnXoI7MO+HHfSLeEQGAeFdDgfGuRgPlXY0IyjuBCMm7GnVs3ile/6fiHhUCin8MDo6DDBGWhwwVlosKKigfGfK4nJRiR0zDx1oAGC42UFA8bNAgOdggQvJPQgTkXoM6Mu+0SCMTkY9LAcRAgQdGQwEJykUBC0pIDRaSlQJ6XGqqUWumISaTAYaWHA2KlBwQkpIcFJKQKiggHTnwuGRUox5NQ0YmAwwZORoUGTkgJBk5KCQZVVBAMnLgcckoR82ahoqNBDBEpFhQNKRwkCSkkJAUlCEBCUhhR6afNdLaRETUZAGipI4KRk4dGJSmOjgoYa3gkNTVKxiXxFpkv2nYy4WAoa2Ag+KrQIQkqkCFZKiGCkhNgQzFycfTb+XS/EiH363fCzicfXeUHefoWwoUKYNIyX5YcrBIHVDO80dlkeBsqCzPD1WOXqijynkDZOVB8KzS8lx/eWlISZu4NMvr2oMcWlJb38pZ3pg2Y2lZHvdz9FCT2nalmjkA19IB9DxP1DZEbzQlBKWmTZHhcXNKCUSprSKlHHdENR6ljKjmeCPaOKRl+VhFD0+p2kbPHYBsEVfP80e1EknJ8sNkoSt1QJbuMSKp8SuVEUnNeryJ1zIXEV+rjTQVaftIz2Em0l50nIkID2gpQ/BEX5x9G47hnrMLRwlrKWMpGR5XfXlwS2WOz1MfO0lLJ6EfM47UQ6zfbTp0j5ZywX3Dvm0gwlx6N1CE8AvaMyASwGwX1EgDdgqo61ebWCwHeLNGRASdSutEAhit10hQWm/EGkvrPHjqZFrHEgBpnSCBab0WayStS3Fmp1J7LQKM3hsoKMVTwcbU/P4WqH4fUPf7sMrfH037IozxVLonEgCdrRMkKL03Yo02xvOIz9MN8lgEqFGeQMEN87VgI2leio89leZrEYCOnmooKM1TwcbSvBJNfDLlUymA9M/QwEzAxRvXChO/b5kUoFaAe+cK8ca1wsFWWOEA1AoH0FY4GG/myYOpTDr3pFIAzT4ZGtj8k4s32lxo6BcYBCh0EgT08QUBgpsAVaMpm4c1m0jhtH4YpTMwKMVz4UZSPgsSN5n2mQBA9+oZGpT+hXgjGUAE3ZvIAEwAGANwNCgDCPHGNcDh1AY4BDXAIbQBDsc2wNHUBjgCNcARtAGORjNAHWdzMu3XtcOovoGC0jsVbCyls2il0ymeSQCkfA4HZgAh4LhDz5Oph54noEPPE+ih58nYBng6tQGeghrgKbQBngIY4PHeCvPGPNK1FZvTaYdbK/ZiwZdWWm6aLlFWGh9W0kSPi1MVilamj0Sa6HFfMdLdqjYpjxev2i5etbt1h7l6Zfd37UDj1pLjMPnN+jSOC+OWq5T88Bw6y7MMLU0kkezBx6Rc2uHUnCGIH1BUEi8fdlSW647s5wB6op5j+l4fqQsZ0WH8+1I/xDid6q/REZTIaeqd+46Qau14Uogr5XXYHvmqo7Xb9BoyIgToj/DaaQr/zSME0E6hhA2o206CANRtLmmkAN1df/PIfIYV9DmJiav+8/vL/053SP5O/edZmpCDLv4E7o/JDSqrq/wTyk7mRztH89lpmkRlE9yBBiJ4pkf/copMsHdAIhOgeLXQi/vHNyAoZRmnlugGxEw6S7WYBD8hfXbvFPjteKEXPLYMHaT+k/ntJsF/v9ukaXRNAlHcRKk5PdSLswFfhjACrdXLopP5/9Rlns3e/PaxKfbd7KLAFnw22539r3fNUoiApvLPUbHE2pvPzqOvzVc+J/O93V1vYDlcACyyCB4Ai6vEEWigY5xUJaSq9wVaJmXNeH9kFlagAS1XUZompPN5wtDAAg3KdeIPwIIKNAiDRGgiCgwHqAMKDC8ue/dvUG7SPArA+R0I548wHNVnfzuv91Ve1+EW+zpi48PfGdPNjMylv+eIRcsFDVlqBABPAeTCYQOnHDbAUwipbJAMcqwBTxFE0SAJ5PgErkOmC2n5vBl0HOZzweGiynPCzilIm9P/rZ2DyLEBhg/QSkiAMBg9BEDAW0tyyB+KQjenQ2G4H5iQt4bhfT9UKgDLWT3tD4eTfdqHogSbTvNjH2I6w4F9qFRguoYzneQWPhQl3HSqK/gg0+k+4EOlAtM1oOlUr+oQSAAmNDyph5nR4kIdQjpQ/YOZVHZMHooSbErNGXmIGQ0v5KFSgekaznS6W28QqHAjWlx5B1nS6sMbRD5YI4AZVnOLDQAUbFTTFXaISW0+sAFkg1Q9mDE1t9IAQMHGNF1JhxjT5kMaQDZI1YMZU3HMHAwTbEjdGXOIGU0vzMFywSkczoB2h8aAgOFGbXViHGTeDu/FgLKOYSIw4+v+gCGQgs1t8QEcYmer818I6UD1DzcH/tNvCLd4wt3a/WDJY24IT3U/uRBYzPtkKJbsZRVELu5tE0Iy6v42cP4te70FgIJQveHhFgQMgKuyR9tAXV1wV7aBU27J7WgIkuq6FgAJhgi6l1oQNEDJQEglnNEGDQuqD9ogkf70L1O7M9etfZdyt6/DJ0Dc4+twCMXRa9Dckzt5/Wuz0OIzdWspKPk7Hc4g2dVpIAr/Jms4juRMNBAkuEmqA9EAHOGpMxAkvEmKd87hOLIXzFCU4EZpni8DgfZhmrUP1K59iIZJ3hsDQcK3rxWPjSFMFp4RQ1EAupXiDTFgk0XyOhiKEr65pXoaDABS3fkBAIW3zXDhF4wVPnDoLvIgRAJr3gFU8w7AmncAMuirnt0AgMIHfsObW8jQFH5BRPKbFihIeHtU32ThOMHtMvyRBZxfq56/AIDCrw4Y3r6GY2l+tQCAgptn+tIKxjqEat4hWPMOAZt3BNW8I7DmHUE0T3a6FIoS3DDN0VIAkObRCAIpvHWmF6NgDjyBouUTMFo+AWzeU6jmPQVr3lOI5v35twtNZzVbu1vI3do0GLbPBg+HfDVIndw0qNfJrUYEl0/DyP93yXWw/xekltXXxdayS3I008GvH7bEjpLnjeGWtNBD8cAxDjJzR9Ou5QEfFD+UswJn8nd7fNnaXvDIVtV6AzgllQ36jFlyN+MpAS8ZVP+Ir4rTssyXSS2+rvCPrd8ov8zi2YecVCQ9QoUj7mB25OTzTVol6zQhdxpP5nuGa6iLrGne7HTZuIw5i8plFJtKwS2I2+QQHl1kMaRUVYq/GeC4qyNygp5EKe4iZVVEienw532RZMtkHaVm67VHHQcR0ioOque8QGviGCSrjDa6VKa6QTCr5eiakvsUcbyQKOPKpLbLjcKA4gnZgFLqN0yjFu1sA4sUNxYTk6jlUo+wHn9ANp5I/IYZ1BH3emICyT5IJuaP7TqOMJziW6c2Gk35hmnTFgx6Ys5w70GTEIYsRD7aHVlKBqs3a2RbNQkPQha2jlHIytJGIUqL+2VwnrS79TSravOC+sCjimXXbjtYMs2Q8lBM8RtRtoMrlN0fW2QfbruxGWQbcMzMUfjkZ2coUvmMQ52ebachmH2ja9AL5Bumlo+RpyBWh5PjEWiluSPm24Wa62CDU9TDsU7F+UzsN5nDV+OA+GQeX+fY8s2elZS96K5E3l0yapEzbdWIfMOPvVGRtP1g1CPl2arh2f21iBWqUYnIstXBcvuroEsZA5+m28DrrH7kZkJjADfJNtwmTEivwKznmyKzHKvQbNreh28OMe107azRdH2vVy31N0v98ibrTHpUF6J1M7Z1O1byeS8nG0OJddZhc5hvDvBq07yaLXWfrla3bo3Ztw4lsaXULWmy6MxdLW7byrHuc0kyi8QtaS4dW7raat1/MPdk5EgoTcqkTVQ3CCwN7NhBsKwO9XBFXY3TRislOAyk7RpBukxnW+cFNe0BqWmuw7qa2rNqC2lEz5S4K2rJCOrg0A7KaJnHDqPqg6jBCLjB844XzYudJuCfRmANPK/eZOTItfn1ApXJrYA4pofq8oyaP/Mmu8nZ3F6TiD2infaeoyqK8XT7tKiSG9xanL0kzSUfwP8SpRv8yMvVNYrfZBebar2pcJPJd7v3sjLIAqGrfhLVTpP5+GJNfpUQTcBiJuSU+iJ7vknSmMv9ynKNowWCrDx+RDi9sSVeyFTo9p4jvau/L3YBourjC6YrtFqnGKy8yC4jEjDBXzY8mL1Ft9Hy/j0Nj9IO0m8IVe3HL5LotohWJcUQ5fFPzOF49fUf/w/AF1gVHysBAA==";
        
        public override void Up()
        {
            CreateTable(
                "dbo.Character",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        UserId = c.Guid(nullable: false),
                        FirstName = c.String(nullable: false, maxLength: 100, unicode: false),
                        MiddleName = c.String(nullable: false, maxLength: 100, unicode: false),
                        LastName = c.String(nullable: false, maxLength: 100, unicode: false),
                        DateOfBirth = c.DateTime(nullable: false, precision: 0),
                        Gender = c.Short(nullable: false),
                        Alive = c.Boolean(nullable: false, storeType: "bit"),
                        Health = c.Int(nullable: false),
                        Armor = c.Int(nullable: false),
                        SSN = c.Int(nullable: false),
                        Position_X = c.Single(nullable: false),
                        Position_Y = c.Single(nullable: false),
                        Position_Z = c.Single(nullable: false),
                        WalkingStyle = c.String(maxLength: 200, unicode: false),
                        Model = c.String(nullable: false, maxLength: 200, unicode: false),
                        StyleId = c.Guid(nullable: false),
                        AppearanceId = c.Guid(nullable: false),
                        FaceShapeId = c.Guid(nullable: false),
                        HeritageId = c.Guid(nullable: false),
                        LastPlayed = c.DateTime(precision: 0),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Appearances", t => t.AppearanceId, cascadeDelete: true)
                .ForeignKey("dbo.FaceShapes", t => t.FaceShapeId, cascadeDelete: true)
                .ForeignKey("dbo.Heritages", t => t.HeritageId, cascadeDelete: true)
                .ForeignKey("dbo.Styles", t => t.StyleId, cascadeDelete: true)
                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
                .Index(t => t.UserId)
                .Index(t => t.StyleId)
                .Index(t => t.AppearanceId)
                .Index(t => t.FaceShapeId)
                .Index(t => t.HeritageId);
            
            CreateTable(
                "dbo.Appearances",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        EyeColorId = c.Int(nullable: false),
                        HairColorId = c.Int(nullable: false),
                        HairHighlightColor = c.Int(nullable: false),
                        Aging_Type = c.Int(nullable: false),
                        Aging_Index = c.Int(nullable: false),
                        Aging_Opacity = c.Single(nullable: false),
                        Aging_ColorType = c.Int(nullable: false),
                        Aging_ColorId = c.Int(nullable: false),
                        Aging_SecondColorId = c.Int(nullable: false),
                        Beard_Type = c.Int(nullable: false),
                        Beard_Index = c.Int(nullable: false),
                        Beard_Opacity = c.Single(nullable: false),
                        Beard_ColorType = c.Int(nullable: false),
                        Beard_ColorId = c.Int(nullable: false),
                        Beard_SecondColorId = c.Int(nullable: false),
                        Blush_Type = c.Int(nullable: false),
                        Blush_Index = c.Int(nullable: false),
                        Blush_Opacity = c.Single(nullable: false),
                        Blush_ColorType = c.Int(nullable: false),
                        Blush_ColorId = c.Int(nullable: false),
                        Blush_SecondColorId = c.Int(nullable: false),
                        Blemishes_Type = c.Int(nullable: false),
                        Blemishes_Index = c.Int(nullable: false),
                        Blemishes_Opacity = c.Single(nullable: false),
                        Blemishes_ColorType = c.Int(nullable: false),
                        Blemishes_ColorId = c.Int(nullable: false),
                        Blemishes_SecondColorId = c.Int(nullable: false),
                        Chest_Type = c.Int(nullable: false),
                        Chest_Index = c.Int(nullable: false),
                        Chest_Opacity = c.Single(nullable: false),
                        Chest_ColorType = c.Int(nullable: false),
                        Chest_ColorId = c.Int(nullable: false),
                        Chest_SecondColorId = c.Int(nullable: false),
                        Complexion_Type = c.Int(nullable: false),
                        Complexion_Index = c.Int(nullable: false),
                        Complexion_Opacity = c.Single(nullable: false),
                        Complexion_ColorType = c.Int(nullable: false),
                        Complexion_ColorId = c.Int(nullable: false),
                        Complexion_SecondColorId = c.Int(nullable: false),
                        Eyebrows_Type = c.Int(nullable: false),
                        Eyebrows_Index = c.Int(nullable: false),
                        Eyebrows_Opacity = c.Single(nullable: false),
                        Eyebrows_ColorType = c.Int(nullable: false),
                        Eyebrows_ColorId = c.Int(nullable: false),
                        Eyebrows_SecondColorId = c.Int(nullable: false),
                        Lipstick_Type = c.Int(nullable: false),
                        Lipstick_Index = c.Int(nullable: false),
                        Lipstick_Opacity = c.Single(nullable: false),
                        Lipstick_ColorType = c.Int(nullable: false),
                        Lipstick_ColorId = c.Int(nullable: false),
                        Lipstick_SecondColorId = c.Int(nullable: false),
                        Makeup_Type = c.Int(nullable: false),
                        Makeup_Index = c.Int(nullable: false),
                        Makeup_Opacity = c.Single(nullable: false),
                        Makeup_ColorType = c.Int(nullable: false),
                        Makeup_ColorId = c.Int(nullable: false),
                        Makeup_SecondColorId = c.Int(nullable: false),
                        MolesAndFreckles_Type = c.Int(nullable: false),
                        MolesAndFreckles_Index = c.Int(nullable: false),
                        MolesAndFreckles_Opacity = c.Single(nullable: false),
                        MolesAndFreckles_ColorType = c.Int(nullable: false),
                        MolesAndFreckles_ColorId = c.Int(nullable: false),
                        MolesAndFreckles_SecondColorId = c.Int(nullable: false),
                        SunDamage_Type = c.Int(nullable: false),
                        SunDamage_Index = c.Int(nullable: false),
                        SunDamage_Opacity = c.Single(nullable: false),
                        SunDamage_ColorType = c.Int(nullable: false),
                        SunDamage_ColorId = c.Int(nullable: false),
                        SunDamage_SecondColorId = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.FaceShapes",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        NoseWidth = c.Single(nullable: false),
                        NosePeakHeight = c.Single(nullable: false),
                        NosePeakLength = c.Single(nullable: false),
                        NoseBoneHeight = c.Single(nullable: false),
                        NosePeakLowering = c.Single(nullable: false),
                        NoseBoneTwist = c.Single(nullable: false),
                        EyeBrowHeight = c.Single(nullable: false),
                        EyeBrowLength = c.Single(nullable: false),
                        CheekBoneHeight = c.Single(nullable: false),
                        CheekBoneWidth = c.Single(nullable: false),
                        CheekWidth = c.Single(nullable: false),
                        EyeOpenings = c.Single(nullable: false),
                        LipThickness = c.Single(nullable: false),
                        JawBoneWidth = c.Single(nullable: false),
                        JawBoneLength = c.Single(nullable: false),
                        ChinBoneLowering = c.Single(nullable: false),
                        ChinBoneLength = c.Single(nullable: false),
                        ChinBoneWidth = c.Single(nullable: false),
                        ChinDimple = c.Single(nullable: false),
                        NeckThickness = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Heritages",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Parent1 = c.Int(nullable: false),
                        Parent2 = c.Int(nullable: false),
                        Resemblance = c.Single(nullable: false),
                        SkinTone = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Styles",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Face_Type = c.Int(nullable: false),
                        Face_Index = c.Int(nullable: false),
                        Face_Texture = c.Int(nullable: false),
                        Head_Type = c.Int(nullable: false),
                        Head_Index = c.Int(nullable: false),
                        Head_Texture = c.Int(nullable: false),
                        Hair_Type = c.Int(nullable: false),
                        Hair_Index = c.Int(nullable: false),
                        Hair_Texture = c.Int(nullable: false),
                        Torso_Type = c.Int(nullable: false),
                        Torso_Index = c.Int(nullable: false),
                        Torso_Texture = c.Int(nullable: false),
                        Torso2_Type = c.Int(nullable: false),
                        Torso2_Index = c.Int(nullable: false),
                        Torso2_Texture = c.Int(nullable: false),
                        Legs_Type = c.Int(nullable: false),
                        Legs_Index = c.Int(nullable: false),
                        Legs_Texture = c.Int(nullable: false),
                        Hands_Type = c.Int(nullable: false),
                        Hands_Index = c.Int(nullable: false),
                        Hands_Texture = c.Int(nullable: false),
                        Shoes_Type = c.Int(nullable: false),
                        Shoes_Index = c.Int(nullable: false),
                        Shoes_Texture = c.Int(nullable: false),
                        Special1_Type = c.Int(nullable: false),
                        Special1_Index = c.Int(nullable: false),
                        Special1_Texture = c.Int(nullable: false),
                        Special2_Type = c.Int(nullable: false),
                        Special2_Index = c.Int(nullable: false),
                        Special2_Texture = c.Int(nullable: false),
                        Special3_Type = c.Int(nullable: false),
                        Special3_Index = c.Int(nullable: false),
                        Special3_Texture = c.Int(nullable: false),
                        Textures_Type = c.Int(nullable: false),
                        Textures_Index = c.Int(nullable: false),
                        Textures_Texture = c.Int(nullable: false),
                        Hat_Type = c.Int(nullable: false),
                        Hat_Index = c.Int(nullable: false),
                        Hat_Texture = c.Int(nullable: false),
                        Glasses_Type = c.Int(nullable: false),
                        Glasses_Index = c.Int(nullable: false),
                        Glasses_Texture = c.Int(nullable: false),
                        EarPiece_Type = c.Int(nullable: false),
                        EarPiece_Index = c.Int(nullable: false),
                        EarPiece_Texture = c.Int(nullable: false),
                        Unknown3_Type = c.Int(nullable: false),
                        Unknown3_Index = c.Int(nullable: false),
                        Unknown3_Texture = c.Int(nullable: false),
                        Unknown4_Type = c.Int(nullable: false),
                        Unknown4_Index = c.Int(nullable: false),
                        Unknown4_Texture = c.Int(nullable: false),
                        Unknown5_Type = c.Int(nullable: false),
                        Unknown5_Index = c.Int(nullable: false),
                        Unknown5_Texture = c.Int(nullable: false),
                        Watch_Type = c.Int(nullable: false),
                        Watch_Index = c.Int(nullable: false),
                        Watch_Texture = c.Int(nullable: false),
                        Wristband_Type = c.Int(nullable: false),
                        Wristband_Index = c.Int(nullable: false),
                        Wristband_Texture = c.Int(nullable: false),
                        Unknown8_Type = c.Int(nullable: false),
                        Unknown8_Index = c.Int(nullable: false),
                        Unknown8_Texture = c.Int(nullable: false),
                        Unknown9_Type = c.Int(nullable: false),
                        Unknown9_Index = c.Int(nullable: false),
                        Unknown9_Texture = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.CharacterSessions",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Connected = c.DateTime(precision: 0),
                        Disconnected = c.DateTime(precision: 0),
                        CharacterId = c.Guid(nullable: false),
                        SessionId = c.Guid(nullable: false),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Character", t => t.CharacterId, cascadeDelete: true)
                .ForeignKey("dbo.Sessions", t => t.SessionId, cascadeDelete: true)
                .Index(t => t.CharacterId)
                .Index(t => t.SessionId);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.CharacterSessions", "SessionId", "dbo.Sessions");
            DropForeignKey("dbo.CharacterSessions", "CharacterId", "dbo.Character");
            DropForeignKey("dbo.Character", "UserId", "dbo.Users");
            DropForeignKey("dbo.Character", "StyleId", "dbo.Styles");
            DropForeignKey("dbo.Character", "HeritageId", "dbo.Heritages");
            DropForeignKey("dbo.Character", "FaceShapeId", "dbo.FaceShapes");
            DropForeignKey("dbo.Character", "AppearanceId", "dbo.Appearances");
            DropIndex("dbo.CharacterSessions", new[] { "SessionId" });
            DropIndex("dbo.CharacterSessions", new[] { "CharacterId" });
            DropIndex("dbo.Character", new[] { "HeritageId" });
            DropIndex("dbo.Character", new[] { "FaceShapeId" });
            DropIndex("dbo.Character", new[] { "AppearanceId" });
            DropIndex("dbo.Character", new[] { "StyleId" });
            DropIndex("dbo.Character", new[] { "UserId" });
            DropTable("dbo.CharacterSessions");
            DropTable("dbo.Styles");
            DropTable("dbo.Heritages");
            DropTable("dbo.FaceShapes");
            DropTable("dbo.Appearances");
            DropTable("dbo.Character");
        }
    }
}
